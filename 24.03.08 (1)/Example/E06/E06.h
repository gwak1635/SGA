#pragma once

#include "../Define/GlobalDefine.h"

/*
배열은 같은 자료형을 지닌 변수들 하나에 묶어두는 기능을 말하며,

변수가 특정한 모양과 크기를 가지고있는 박스라고 했을때
배열은 해당 박스들을 한곳에 묶어놓은듯한 모양이라 생각하면 된다.

기본적으로 배열의 선언은 일반적인 변수를 선언한 뒤에 [](인덱스 연산자)를
입력하는것으로 선언할수 있으며,

인덱스 연산자 안에 상수값을 집어넣으면 해당 상수값만큼의 변수를 넣을수 있는
배열이 만들어지는 것이다.

Ex) 
int aValues[10] == int형 변수가 10개 들어갈수있은 
aValues라는 이름의 배열

여기서 주의해야할 점은, 인덱스의 크기를 10을 넣었다 하더라도 인덱스 내부에
접근할수 있는 번호는 0부터 시작하기 때문에 우리가 입력한 숫자보다 1작은수가
최대 번호가 되며

우리는 인덱슨연산자에 이러한 번호를 넣는것으로 원하는 위치에 접근하는것이
가능하다.

배열과 가장 많이 비교되고 면접같은곳에서도 생각보다 자주 물어보는
연결 리스트란게 존재한다 // 수업에선 다루지 않음

배열과 연결리스트의 차이는 배열이 변수들을 줄로 묶어놓은 거라면,
연결 리스트는 변수들의 앞,뒤에 고리를 만들어 변수들끼리 자기의 앞뒤를
엮어놓은 형태라 볼수있다.

배열은 인덱스 번호가 있어 우리가 원하는 위치에 쉽게 접근할수 있지만,
연결 리스트는 자신들의 앞,뒤만 알기에 원하는 데이터가 나올때까지 계속해서
탐색을 해야하는 단점이있고

반대로 배열은 중간에 데이터를 넣기위해서는 넣을 위치 앞,뒤에 있는 데이터들을
조금씩 밀어주는 작업이 필요해 데이터의 입,출력 효율이 좋은 편이 아니며,
연결 리스트는 그냥 고리달린 변수를 중간에 추가해 앞,뒤에 연결만 해주면
되기 때문에 입,출력 효율이 좋은 편이다.

우리같은 게임 프로그래머는 한번에 다루는 데이터들의 개수가 몇백 몇천개다 보니
하나하나 찾아다니는 연결리스트의 효율이 매우 좋지 않아 배열을 많이 사용한다.
*/

void E06();