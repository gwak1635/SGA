#pragma once

#include "Geomatries/Rect.h"
#include "Charactor/Player.h"

class JumpDemo : public IObject 
{
public:
    // IObject을(를) 통해 상속됨
    void Init() override;
    void Destroy() override;
    void Update() override;
    void Render() override;
    void PostRender() override;
    void GUI() override;

private:

    Player* player = nullptr;

    Rect* floor = nullptr;

    vector<Rect*> enemys;

    bool pHit = false;

    float t = 0.0f;
};

/*
과제! 점프게임 만들어오기 : 기간 - 24.02.19 일까지 // 24.02.16일 중간 점검

조건1. 스페이스바를 누르면 점프하는 플레이어

조건2. 플레이어가 서있을수 있는 바닥
// 플레이어가 중력이 있다는 가정하에 특정 값만큼 - 이동할꺼임
// 바닥과 충돌시 -를 지운다면? 혹은 -값만큼 +한다면?

조건3. 플레이어에게 천천히 다가오는 장해물
조건3_1. 플레이어와 장해물이 서로 충돌시 플레이어 색을 일정 시간동안
다른 색으로 바꾼다.

=============================================== 여기까지 난이도 : 하

추가 조건1. 장해물 패턴 랜덤화
추가 조건1_1. 장해물은 화면 밖으로 넘어가서 지우는게 아닌
다시 재활용 해야함
추가 조건1_2. 사라진 순서와 상관없이 장해물이 나와야 함

추가 조건2. 일정 횟수 이상 충돌시 사망하는 플레이어
추가 조건2_1. 플레이어가 충돌후 일정 시간동안 무적시간 만들기

추가 조건3. 랜덤하게 나오는 회복 아이템
추가 조건3_1. 회복 아이템과 플레이어 충돌시 플레이어 충돌횟수 회복

=============================================== 여기까지 난이도 : 중

하드 조건1. 플레이어 체력과 연동되어 플레이어 HP 시각화 하기
// HP UI 만들기

하드 조건2. 플레이어가 살아있는 시간동안 점수 증가시키기
하드 조건2_1. 해당 점수는 플레이어 사망후 콘솔창에 출력하기

하드 조건3. 특수 아이템 만들기
하드 조건3_1. 특수 아이템과 플레이어 충돌시 해당 아이템 앞에있는
플레이어에게 다가오고 있는 장해물중 일부 파괴

=============================================== 여기까지 난이도 : 상

헬 조건1. 바닥 떨어지게 하기
헬 조건1_1. 간격있는 바닥과 장해물의 배치 신경써서 만들기

헬 조건2. 다시하기 버튼
헬 조건2_1. 이전 기록 기억해서 랭킹 만들기
헬 조건2_2. 랭킹에 등록될 이름도 입력받기(콘솔 CMD)

헬 조건3. 시작할때 캐릭터 선택창 만들기
헬 조건3_1. 이동속도, 체력 등의 스텟이 다른 캐릭터 여러개 만들기

=============================================== 여기까지 난이도 : 최상
*/